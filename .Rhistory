df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df_Meth[i]), col="red"))
}
dev.off()
df_Meth<-Meth(df, 2,1,3,4)
plot(df_Meth)
title(main=list(colnames(df_Meth[4]), col="red"))
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
head(df)
df_Meth<-Meth(df, 2,1,3,4)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[4]), col="red"))
title(main=list(colnames(df_Meth[5]), col="red"))
df_Meth<-Meth(df, 2,1,3,5)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[5]), col="red"))
df_Meth<-Meth(df, 2,1,3,4)
df_Meth<-Meth(df, 2,1,3,5)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[5]), col="red"))
df_Meth<-Meth(df, 2,1,3,5)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[5]), col="red", line=2))
title(main=list(colnames(df_Meth[5]), col="red"), line=2))
title(main=list(colnames(df_Meth[5]), col="red"), line=2)
title(main=list(colnames(df_Meth[5]), col="red"), line=3)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.3)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.5)
df_Meth<-Meth(df, 2,1,3,5)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.5)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.4)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,5)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.45)
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
head(df)
pdf()
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[i]), col="red"), line=3, adj=0.45)
}
dev.off()
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
head(df)
head(df)
df_Meth<-Meth(df, 2,1,3,4)
summary(df_Meth)
title(main=list(colnames(df_Meth$y), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,6)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth$y), col="red"), line=3, adj=0.45)
title(main=list(colnames(df_Meth[y]), col="red"), line=3, adj=0.45)
title(main=list(colnames(df_Meth["y"]), col="red"), line=3, adj=0.45)
title(main=list(colnames(df_Meth["6"]), col="red"), line=3, adj=0.45)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,6)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,12)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[5]), col="red"), line=3, adj=0.45)
title(main=list(colnames(df_Meth[12]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,12)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[12]), col="red"), line=3, adj=0.45)
title(main=list(colnames(df_Meth[12+1]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,12)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[12+1]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,4)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[4+1]), col="red"), line=3, adj=0.45)
title(main=list(colnames(df_Meth[4-1]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,4)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[4-1]), col="red"), line=3, adj=0.45)
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
head(df)
pdf()
df_Meth<-Meth(df, 2,1,3,4)
plot(df_Meth)
title(main=list(colnames(df_Meth[4]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,i)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
head(df)
pdf()
df_Meth<-Meth(df, 2,1,3,4)
plot(df_Meth)
title(main=list(RBC, col="red"), line=3, adj=0.45)
for(i in c(5:25)){
df_Meth<-Meth(df, 2,1,3,i)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[i]), col="red"), line=3, adj=0.45)
}
dev.off()
pdf()
for(i in c(4:22)){
df_Meth<-Meth(df, 2,1,3,i)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[i]), col="red"), line=3, adj=0.45)
}
dev.off()
df_Meth<-Meth(df, 2,1,3,23)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[23]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,23)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[23+1]), col="red"), line=3, adj=0.45)
df_Meth[2]
df_Meth[4]
df_Meth$y
for(i in c(4:22)){
df_Meth<-Meth(df, 2,1,3,i)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df_Meth[i+1]), col="red"), line=3, adj=0.45)
}
dev.off()
df_Meth<-Meth(df, 2,1,3,22)
summary(df_Meth)
str(df)
df_Meth<-Meth(df, 2,1,3,4)
str(df_Meth)
df_Meth<-Meth(df, 2,1,3,5)
str(df_Meth)
df_Meth<-Meth(df, 2,1,3,4)
str(df_Meth)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df[4]), col="red"), line=3, adj=0.45)
pdf()
for(i in c(4:22)){
df_Meth<-Meth(df, 2,1,3,4)
str(df_Meth)
summary(df_Meth)
plot(df_Meth)
title(main=list(colnames(df[4]), col="red"), line=3, adj=0.45)
}
dev.off()
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
str(df)
pdf()
for(i in c(4:22)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
}
dev.off()
str(df)
pdf()
for(i in c(4:22)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i-1]), col="red"), line=3, adj=0.45)
}
dev.off()
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i-1]), col="red"), line=3, adj=0.45)
}
pdf()
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i-1]), col="red"), line=3, adj=0.45)
}
dev.off()
df_Meth<-Meth(df, 2,1,3,4)
plot(df_Meth)
title(main=list(colnames(df[4]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,25)
plot(df_Meth)
title(main=list(colnames(df[25]), col="red"), line=3, adj=0.45)
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,24)
plot(df_Meth)
title(main=list(colnames(df[24]), col="red"), line=3, adj=0.45)
}
dev.off()
df_Meth<-Meth(df, 2,1,3,24)
plot(df_Meth)
title(main=list(colnames(df[24]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,5)
plot(df_Meth)
title(main=list(colnames(df[5]), col="red"), line=3, adj=0.45)
for(i in c(4:25)){
print(i)}
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
}
dev.off()
df_Meth<-Meth(df, 2,1,3,20)
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
str(df)
pdf()
pdf()
df_Meth<-Meth(df, 2,1,3,20)
plot(df_Meth)
title(main=list(colnames(df[20]), col="red"), line=3, adj=0.45)
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
str(df)
pdf()
df_Meth<-Meth(df, 2,1,3,20)
plot(df_Meth)
title(main=list(colnames(df[20]), col="red"), line=3, adj=0.45)
dev.off()
df_Meth<-Meth(df, 2,1,3,20)
plot(df_Meth)
title(main=list(colnames(df[20]), col="red"), line=3, adj=0.45)
dev.off()
BA.plot(df_Meth, repl.conn=FALSE, meth.names = TRUE)
reg<-PBreg(df_Meth)
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
str(df)
df_Meth<-Meth(df, 2,1,3,20)
plot(df_Meth)
title(main=list(colnames(df[20]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,25)
plot(df_Meth)
title(main=list(colnames(df[25]), col="red"), line=3, adj=0.45)
df_Meth<-Meth(df, 2,1,3,24)
plot(df_Meth)
title(main=list(colnames(df[24]), col="red"), line=3, adj=0.45)
pdf()
for(i in c(4:6)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
}
dev.off()
for(i in c(4:tail(df_Meth))){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
}
tail(df_Meth)
for(i in c(4:tail(df_Meth),n=1)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
}
for(i in c(4:29)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
}
dev.off()
pdf()
for(i in c(4:29)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
print(i)
}
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
print(i)
}
pdf()
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
print(i)
}
dev.off()
dev.off()
dev.off()
pdf()
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
print(i)
}
dev.off()
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
#load library
library(MethComp)
#import data
df<-read.csv("cani.csv", header = TRUE, sep = ";", dec= ",", stringsAsFactors = FALSE)
str(df)
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
BA.plot(df_Meth, repl.conn=FALSE, meth.names = TRUE)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
print(i)
for(i in c(4:25)){
df_Meth<-Meth(df, 2,1,3,i)
plot(df_Meth)
title(main=list(colnames(df[i]), col="red"), line=3, adj=0.45)
print(i)
}
dev.off()
BA.plot(df_Meth, repl.conn=FALSE, meth.names = TRUE)
reg<-PBreg(df_Meth)
print(reg)
BA.plot(df_Meth, repl.conn=FALSE, meth.names = TRUE)
reg<-PBreg(df_Meth)
print(reg)
plot(reg,subtype= 1, xlim = c(0,50), ylim= c(0,50))
> installJuniper(useJupyterDefault = TRUE)  # install into default Jupyter kernel location
library(JuniperKernel)
install.packages("JuniperKernel")
library(JuniperKernel)
installJuniper(useJupyterDefault = TRUE)  # install into default Jupyter kernel location
install.packages("JuniperKernel")
library(JuniperKernel)
installJuniper(useJupyterDefault = TRUE)  # install into default Jupyter kernel location
devtools::install_github('IRkernel/IRkernel')
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
install.packages("devtools")
devtools::install_github('IRkernel/IRkernel')
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
devtools::install_github('IRkernel/IRkernel')
install.packages("stringr")
IRkernel::installspec()
devtools::install_github('IRkernel/IRkernel')
install.packages("stringr")
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
IRkernel::installspec(user = FALSE)
devtools::install_github('IRkernel/IRkernel')
devtools::install_github(paste0('IRkernel/', c('repr', 'IRdisplay', 'IRkernel')))
IRkernel::installspec()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages("evaluate")
install.packages("evaluate")
install.packages("stringi")
install.packages("stringi")
install.packages("evaluate")
install.packages("stringr")
devtools::install_github(paste0('IRkernel/', c('repr', 'IRdisplay', 'IRkernel')))
IRkernel::installspec()
IRkernel::installspec()
IRkernel::installspec()
IRkernel::installspec()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
IRkernel::installspec()
IRkernel::installspec()
install.packages("shiny")
library("shiny
")
library(shiny)
install.packages("shiny")
library(shiny)
ui<- fluidpage(
titlePanel("Hypertension parameters")
)
# Define UI for app that draws a histogram ----
ui <- fluidPage(
# App title ----
titlePanel("Hypertension parameters"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Slider for the number of bins ----
sliderInput(inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
)
)
library(shiny)
install.packages("shiny")
library(shiny)
runExample("01_hello")
install.packages("shiny")
library(shiny)
runExample("01_hello")
install.packages("shiny")
install.packages("shiny")
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("shiny", "rstudio")
R
rstudio/library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
updateR()
update(R)
if(!require(installr)) {
install.packages("installr"
}
if(!require(installr)) {
install.packages("installr"}
if(!require(installr)) {
install.packages("installr")}
shiny::runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
shiny::runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
install.packages("stringi")
runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
library(rsconnect)
runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
deployApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
shiny::runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
install.packages(plotly)
install.packages("plotly")
runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
shiny::runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
install.packages("tidyr")
runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
install.packages("stringi")
shiny::runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
install.packages("DT")
install.packages("DT")
install.packages("ggplot2")
install.packages("reshape2")
install.packages("data.table")
shiny::runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
runApp('C:/Users/Fra/Downloads/University/MAGISTRALE/Medical Info/HMS')
runGitHub("HMS-Serena","FrancescoTranquillo")
runGitHub("HMS-Serena","FrancescoTranquillo")
runGitHub("HMS-Serena","FrancescoTranquillo")
runGitHub("HMS-Serena","FrancescoTranquillo")
.libPaths()
library("dplyr", lib.loc="~/R/win-library/3.5")
getwd()
setwd()
dir(C:\Users\Fra\Desktop\Serena)
dir("C:\Users\Fra\Desktop\Serena")
setwd("C:\\Users\\Fra\\Desktop\\Serena")
getwd()
setwd("C:\\Users\\Fra\\Desktop\\github\\Serena")
getwd()
runGitHub("Serena","FrancescoTranquillo")
install.packages("reshape2")
runGitHub("Serena","FrancescoTranquillo")
getwd()
shiny::runApp()
library(reshape2)
install.packages("dplyr")
.libPaths()
install.packages("dplyr")
shiny::runApp()
install.packages("reshape2")
runApp()
install.packages("stringi")
runApp()
install.packages("stringi")
runApp()
runApp()
